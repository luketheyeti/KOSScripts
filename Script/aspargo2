//Aspargus staging launch script, expanded to have a final stage.

clearscreen.

parameter direction.
parameter TargetAlt.


lock throttle to 1.

wait 1.

lock steering to heading(0,90).

run countfrom(5).

stage.

wait 2.
clearscreen.


//staging variables.
declare MaxThrust to ship:maxthrust.
declare Step to 0.


//////control loops

//side booster staging loop
when ship:maxthrust < MaxThrust then{
    print "=================".
    print "staging side boosters!".
    print "=================".
    stage.
    return false.
//start loop for next stage.
    set step to 1.
}

//loop for final stage.
when stage:liquidfuel < 1 then {
  print "=================". 
  print "center core empty. staging for final core".
  print "=================".
  stage.

  //wait 3.

  //stage.

}


when ship:altitude > 10000 then{
    print "Throttling up".
    lock throttle to 1.
}


//fairing stage
when ship:altitude >= 50000 then{
    //lock steering to prograde.
    //wait 3.
    print "=================".
    print "staging fairings".
    print "=================".
    set abort to true.
    return false.
}

wait 3.

print "starting roll".
lock steering to heading (direction,90).

wait until ship:velocity:surface:mag >= 90.
print "throttling down".
lock throttle to .8.


declare Pitch to 85.
declare AscVel to 100.

//start turn loop


clearscreen.

print "starting turn.".
until ship:velocity:surface:mag >= 500 or Pitch <= 46{

    //wait until over 100m/s
    print "ship velocity is: " +round(ship:velocity:surface:mag).
    print "ship pitch is: " + (Pitch + 5).
    wait until ship:velocity:surface:mag >= AscVel.

    //pitch down 
    print "pitching down to: " + Pitch.
    lock steering to heading(direction,pitch).
    
    //adjust inputs
    //tweak turn speed here. ascvel up to turn slower, down to turn faster.
    set AscVel to (AscVel + 50).
    set Pitch to (pitch - 5).
    wait 1.
    clearscreen.
}


////////////////////////////////////////////

print "coasting to 10k+".
wait until ship:altitude > 10000.

print "current pitch is: " + Pitch.
wait 2.

set Pitch to 45.
set AscVel to round(ship:velocity:surface:mag).

///////////////
//start turn loop
///////////////

print "continuing turn.".
wait 1.
until ship:apoapsis >= (targetAlt * 1.01) or Pitch <= 20{

    //wait until over 100m/s
    print "ship apo is: " + round(ship:apoapsis).
    print "ship pitch is: " + (Pitch +5).
    wait until ship:velocity:surface:mag >= AscVel.
             

    //pitch down 
    lock steering to heading(direction,pitch).
    print "pitching down to: " + Pitch.

    
    //adjust inputs
    //adjust turn speed here. ascval is DV between pitch changes.
    set AscVel to (AscVel + 115).
    set Pitch to (pitch - 5).
    wait 1.
    clearscreen.
}

//add looping apo readout to the following section.
//wait until ship:apoapsis >= (targetAlt * 1.01) .
until ship:apoapsis >= (targetAlt * 1.01) {
  clearscreen.
  print "waiting for apo".
  print "ship apo is: " + round(ship:apoapsis).
  wait 2.

}

print "apo reached, throttling down".
lock throttle to 0.
wait 3.

lock steering to prograde.

///////////////////////
//Burn for orbit

run counttoapo(20).

declare FinalAlt to round(ship:apoapsis).

print "Final altitude set to: " + FinalAlt.
wait 3.


lock steering to heading (direction, 0).
print "firing engines in 5".
run countfrom(5).
print "firing engines for orbit".
lock throttle to 1.

//wait until ship:altitude >= FinalAlt.
until ship:altitude >= FinalAlt.{
  print "apoapsis is: " + round(ship:apoapsis).
  print "waiting on peri. Peri is: " + round(ship:periapsis).
  wait 1.
  clearscreen.
  
}

print "at apo, pitching up".
lock steering to heading (direction,5).

//wait until ship:apoapsis >= (FinalAlt *1.01).
until ship:apoapsis >= (FinalAlt *1.01).{
  print "apoapsis is: " + round(ship:apoapsis).
  print "waiting on peri. Peri is: " + round(ship:periapsis).
  wait 1.
  clearscreen.

}

print "woah there".
lock steering to heading (direction,0).

//wait until periapsis >= max(74000,(FinalAlt * .9)) .
until periapsis >= max(74000,(FinalAlt * .9)) .{
  print "Apo is: "+ round(ship:apoapsis).
  print "waiting on peri. Peri is: "+ round(ship:periapsis).
  wait 1.
  clearscreen.

}

lock throttle to 0.

set ship:control:pilotmainthrottle to 0.
print "Welcome to orbit".


wait 5.
